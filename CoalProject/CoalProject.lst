Microsoft (R) Macro Assembler Version 14.29.30137.0	    12/20/21 00:16:50
ToDo.asm						     Page 1 - 1


				INCLUDE irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE User.inc
			      C ;INCLUDE irvine32.inc
			      C 
			      C ; these restrictions make it so that all data values in the file are of equal length
			      C ; makes it easier to read/write data
 = 0000001E		      C MAX_NAME_LEN = 30
 = 0000001E		      C MAX_PW_LEN = 30
			      C 
			      C Login PROTO, username:PTR BYTE, password:PTR BYTE
			      C Signup PROTO, username:PTR BYTE, password:PTR BYTE
			      C User_DisplayErrorMsg PROTO
			      C 
			      C GetName PROTO uPtr:DWORD
			      C GetPassword PROTO uPtr:DWORD
			      C 
			      C 
				INCLUDE ToDo.inc
			      C 
			      C 
 = 00000064		      C MAX_DESC_LEN = 100
 = 00000069		      C TODO_SIZE = MAX_DESC_LEN + 4 + 1
			      C 
			      C LoadUser PROTO, userPtr:DWORD
			      C UnloadUser PROTO
			      C DisplayUnfinished PROTO
			      C DisplayCompleted PROTO
			      C 
			      C AddNew PROTO, desc:PTR BYTE
			      C MarkAsDone PROTO, ID:DWORD
			      C 
			      C ToDo_DisplayErrorMsg PROTO
			      C 
				INCLUDE FileHandling.inc
			      C 
			      C ; appends given date at the end of an existing file, or
			      C ; creates a new file if one does not exist
			      C AppendFile PROTO, filename:PTR BYTE, data:PTR BYTE, len:DWORD
			      C 
			      C ; searches file for given data
			      C SearchFile PROTO, filename:PTr BYTE, data:PTR BYTE, len:DWORD
			      C 

 00000069			TODO STRUCT
 00000000  00000000			ID DWORD ?
 00000004  00000064 [			description BYTE MAX_DESC_LEN DUP(0)
	    00
	   ]
 00000068  01				completed BYTE 1
				TODO ENDS

				; private func
				CountToDos PROTO

				; error codes
 = 00000000			NO_ERROR = 0
 = 00000001			FILE_ERROR = 1
 = 00000002			USER_NOT_LOADED = 2
 = 00000003			INVALID_TODO_ID = 3
 = 00000004			ERROR_RANGE = 4

 00000000			.data
 = 0000001E				ERROR_MSG_LEN = 30

 00000000 4E 6F 20 45 72		errorTable	BYTE "No Errors                     ",0
	   72 6F 72 73 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 0000001F  45 72 72 6F 72					BYTE "Error loading file            ",0
	   20 6C 6F 61 64
	   69 6E 67 20 66
	   69 6C 65 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 0000003E  4E 6F 20 75 73					BYTE "No user loaded to the database",0
	   65 72 20 6C 6F
	   61 64 65 64 20
	   74 6F 20 74 68
	   65 20 64 61 74
	   61 62 61 73 65
	   00
 0000005D  54 6F 64 6F 20					BYTE "Todo ID not found             ",0
	   49 44 20 6E 6F
	   74 20 66 6F 75
	   6E 64 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 0000007C 55 6E 6B 6F 77		unknownError BYTE "Unkown error code",0
	   6E 20 65 72 72
	   6F 72 20 63 6F
	   64 65 00

					; headings
 0000008E 54 6F 2D 64 6F		tdlHeading BYTE "To-do list",0Ah,0Dh,0
	   20 6C 69 73 74
	   0A 0D 00

 0000009B 00000000			uPtr DWORD 0
 0000009F 00000000			err DWORD 0

 000000A3 00000000			count DWORD 0

 00000000			.code

 00000000			LoadUser PROC, userPtr:DWORD
 00000003  50				push eax
					
 00000004  8B 45 08			mov eax, userPtr
 00000007  A3 0000009B R		mov uPtr, eax

					INVOKE CountToDos
					
 00000011  58				pop eax
					ret
 00000016			LoadUser ENDP

 00000016			UnloadUser PROC
 00000016  C7 05 0000009B R		mov uPtr, 0
	   00000000
 00000020  C7 05 000000A3 R		mov count, 0
	   00000000
 0000002A  C3				ret
 0000002B			UnloadUser ENDP

 0000002B			DisplayUnfinished PROC
					LOCAL filehandle:HANDLE, username:PTR BYTE

					LOCAL td:TODO
 00000031  60				pushad
 00000032  C7 05 0000009F R		mov err, 0
	   00000000
					
					INVOKE GetName, uPtr
 00000047  89 45 F8			mov username, eax

 0000004A  BA 0000008E R		mov edx, offset tdlHeading
 0000004F  E8 00000000 E		call WriteString

 00000054  8B 55 F8			mov edx, username
 00000057  E8 00000000 E		call OpenInputFile
 0000005C  83 F8 FF			_IF1: cmp eax, INVALID_HANDLE_VALUE
 0000005F  75 0C			jne _ENDIF1
 00000061  C7 05 0000009F R			mov err, FILE_ERROR
	   00000001
 0000006B  EB 47				jmp RETURN
 0000006D				_ENDIF1:
 0000006D  89 45 FC			mov filehandle, eax

 00000070				WHILE1:
 00000070  8D 55 8F				lea edx, td
 00000073  B9 00000069				mov ecx, TODO_SIZE
 00000078  8B 45 FC				mov eax, filehandle
 0000007B  E8 00000000 E			call ReadFromFile
 00000080  83 F8 00				cmp eax, 0 ; if eax is 0, eof was reached
 00000083  74 27				je ENDWHILE1

 00000085  80 7D F7 00				_IF2:cmp [td.completed],0
 00000089  75 1F				jne _ENDIF2
 0000008B  8B 45 8F					mov eax, td.ID
 0000008E  E8 00000000 E				call WriteDec
 00000093  B8 00000020					mov eax, ' '
 00000098  E8 00000000 E				call WriteChar
 0000009D  8D 55 93					lea edx, td.description
 000000A0  E8 00000000 E				call WriteString
 000000A5  E8 00000000 E				call crlf
 000000AA					_ENDIF2:

 000000AA  EB C4			jmp WHILE1
 000000AC				ENDWHILE1:

					INVOKE CloseHandle, filehandle

 000000B4			RETURN:
 000000B4  61				popad
 000000B5  A1 0000009F R		mov eax, err
					ret
 000000BC			DisplayUnfinished ENDP

 000000BC			DisplayCompleted PROC
					LOCAL filehandle:HANDLE, username:PTR BYTE

					LOCAL td:TODO
 000000C2  60				pushad
 000000C3  C7 05 0000009F R		mov err, 0
	   00000000
					
					INVOKE GetName, uPtr
 000000D8  89 45 F8			mov username, eax

 000000DB  BA 0000008E R		mov edx, offset tdlHeading
 000000E0  E8 00000000 E		call WriteString

 000000E5  8B 55 F8			mov edx, username
 000000E8  E8 00000000 E		call OpenInputFile
 000000ED  83 F8 FF			_IF1: cmp eax, INVALID_HANDLE_VALUE
 000000F0  75 0C			jne _ENDIF1
 000000F2  C7 05 0000009F R			mov err, FILE_ERROR
	   00000001
 000000FC  EB 47				jmp RETURN
 000000FE				_ENDIF1:
 000000FE  89 45 FC			mov filehandle, eax

 00000101				WHILE1:
 00000101  8D 55 8F				lea edx, td
 00000104  B9 00000069				mov ecx, TODO_SIZE
 00000109  8B 45 FC				mov eax, filehandle
 0000010C  E8 00000000 E			call ReadFromFile
 00000111  83 F8 00				cmp eax, 0 ; if eax is 0, eof was reached
 00000114  74 27				je ENDWHILE1

 00000116  80 7D F7 01				_IF2:cmp [td.completed],1
 0000011A  75 1F				jne _ENDIF2
 0000011C  8B 45 8F					mov eax, td.ID
 0000011F  E8 00000000 E				call WriteDec
 00000124  B8 00000020					mov eax, ' '
 00000129  E8 00000000 E				call WriteChar
 0000012E  8D 55 93					lea edx, td.description
 00000131  E8 00000000 E				call WriteString
 00000136  E8 00000000 E				call crlf
 0000013B					_ENDIF2:

 0000013B  EB C4			jmp WHILE1
 0000013D				ENDWHILE1:

					INVOKE CloseHandle, filehandle

 00000145			RETURN:
 00000145  61				popad
 00000146  A1 0000009F R		mov eax, err
					ret
 0000014D			DisplayCompleted ENDP

 0000014D			AddNew PROC, desc:PTR BYTE
					LOCAL username:PTR BYTE, td:TODO
 00000153  60				pushad

 00000154  C7 05 0000009F R		mov err, 0
	   00000000

 0000015E  83 3D 0000009B R		_IF1:cmp uPTr, 0
	   00
 00000165  75 0C			jne _ENDIF1
 00000167  C7 05 0000009F R			mov err, USER_NOT_LOADED
	   00000002
 00000171  EB 4C				jmp RETURN
 00000173				_ENDIF1:

					INVOKE GetName, uPtr
 0000017E  89 45 FC			mov username, eax

 00000181  8B 75 08			mov esi, desc
 00000184  8D 7D 97			lea edi, td.description
 00000187  B9 00000064			mov ecx, MAX_DESC_LEN
 0000018C  F3/ A4			REP MOVSB

 0000018E  C6 45 FB 00			mov td.completed, 0
 00000192  A1 000000A3 R		mov eax, count
 00000197  89 45 93			mov td.ID, eax
 0000019A  FF 05 000000A3 R		inc count

					INVOKE AppendFile, username, ADDR td, TODO_SIZE
 000001AE  83 F8 00			_IF2: cmp eax, 0
 000001B1  75 0C			jne _ENDIF2
 000001B3  C7 05 0000009F R			mov err, FILE_ERROR
	   00000001
 000001BD  EB 00				jmp RETURN
 000001BF				_ENDIF2:

 000001BF			RETURN:
 000001BF  61				popad
 000001C0  A1 0000009F R		mov eax, err
					ret
 000001C9			AddNew ENDP

 000001C9			MarkAsDone PROC, ID:DWORD
					LOCAL filehandle:HANDLE, filename:PTR BYTE, td:TODO, numWritten:DWORD, found:BYTE
 000001CF  60				pushad

 000001D0  C7 05 0000009F R		mov err, 0
	   00000000
 000001DA  C6 45 87 00			mov found, 0

 000001DE  83 3D 0000009B R		_IF1:cmp uPTr, 0
	   00
 000001E5  75 0F			jne _ENDIF1
 000001E7  C7 05 0000009F R			mov err, USER_NOT_LOADED
	   00000002
 000001F1  E9 000000A4				jmp RETURN
 000001F6				_ENDIF1:

					INVOKE GetName, uPTr
 00000201  89 45 F8			mov filename, eax

 00000204  BB 80000000			mov ebx, GENERIC_READ
 00000209  81 CB 40000000		OR ebx, GENERIC_WRITE

					INVOKE CreateFile, filename, ebx, 
						DO_NOT_SHARE, 0, OPEN_EXISTING, 
						FILE_ATTRIBUTE_NORMAL, 0
					
 00000225  83 F8 FF			_IF2:cmp eax, INVALID_HANDLE_VALUE
 00000228  75 0C			jne _ENDIF2
 0000022A  C7 05 0000009F R			mov err, FILE_ERROR
	   00000001
 00000234  EB 64				jmp RETURN
 00000236				_ENDIF2:
 00000236  89 45 FC			mov filehandle, eax

 00000239				WHILE1: ; while true
						
 00000239  8B 45 FC				mov eax, filehandle
 0000023C  B9 00000069				mov ecx, TODO_SIZE
 00000241  8D 55 8F				lea edx, td
 00000244  E8 00000000 E			call ReadFromFile
 00000249  83 F8 00				cmp eax, 0
 0000024C  74 34				je ENDWHILE1

 0000024E  8B 45 08				mov eax, ID
 00000251  3B 45 8F				_IF3:cmp eax, [td.ID]
 00000254  75 2A				jne _ENDIF3
							
 00000256  C6 45 F7 01					mov td.completed, 1
							; move back
							INVOKE SetFilePointer, filehandle, -TODO_SIZE, 0, FILE_CURRENT
							INVOKE WriteFile, filehandle, ADDR td, TODO_SIZE, ADDR numWritten, 0
 0000027C  C6 45 87 01					mov found, 1

 00000280					_ENDIF3:

 00000280  EB B7			jmp WHILE1
 00000282				ENDWHILE1:

 00000282  80 7D 87 00			_IF4:cmp [found], 0
 00000286  75 0A			jne _ENDIF4
 00000288  C7 05 0000009F R			mov err, INVALID_TODO_ID
	   00000003
 00000292				_ENDIF4:

					INVOKE CloseHandle, filehandle

 0000029A			RETURN:
 0000029A  61				popad
 0000029B  A1 0000009F R		mov eax, err
					ret
 000002A4			MarkAsDone ENDP

 000002A4			ToDo_DisplayErrorMsg PROC
 000002A4  60				pushad
					
 000002A5  A1 0000009F R		mov eax, err
 000002AA  83 F8 00			cmp eax, 0
 000002AD  7C 34			jl RETURN
 000002AF  83 F8 04			_IF1:cmp eax, ERROR_RANGE
 000002B2  7C 16			jl _ENDIF1
 000002B4  BA 0000007C R			mov edx, offset unknownError
 000002B9  E8 00000000 E			call WriteString
 000002BE  A1 0000009F R			mov eax, err
 000002C3  E8 00000000 E			call WriteDec
 000002C8  EB 19				jmp RETURN
 000002CA				_ENDIF1:

 000002CA  A1 0000009F R		mov eax, err
 000002CF  BB 0000001F			mov ebx, ERROR_MSG_LEN + 1
 000002D4  F7 E3			mul ebx
 000002D6  BE 00000000 R		mov esi, offset errortable
 000002DB  8D 14 06			lea edx, [esi + eax]

 000002DE  E8 00000000 E		call WriteString

 000002E3			RETURN:
 000002E3  61				popad
 000002E4  C3				ret
 000002E5			ToDo_DisplayErrorMsg ENDP

 000002E5			CountToDos PROC
					LOCAL filehandle:HANDLE, username:PTR BYTE

					LOCAL td:TODO
 000002EB  60				pushad
 000002EC  C7 05 0000009F R		mov err, 0
	   00000000
					
					INVOKE GetName, uPtr
 00000301  89 45 F8			mov username, eax

 00000304  8B 55 F8			mov edx, username
 00000307  E8 00000000 E		call OpenInputFile
 0000030C  83 F8 FF			_IF1: cmp eax, INVALID_HANDLE_VALUE
 0000030F  75 02			jne _ENDIF1
 00000311  EB 28				jmp RETURN
 00000313				_ENDIF1:
 00000313  89 45 FC			mov filehandle, eax

 00000316				WHILE1:
 00000316  8D 55 8F				lea edx, td
 00000319  B9 00000069				mov ecx, TODO_SIZE
 0000031E  8B 45 FC				mov eax, filehandle
 00000321  E8 00000000 E			call ReadFromFile
 00000326  83 F8 00				cmp eax, 0 ; if eax is 0, eof was reached
 00000329  74 08				je ENDWHILE1

 0000032B  FF 05 000000A3 R			inc count

 00000331  EB E3			jmp WHILE1
 00000333				ENDWHILE1:

					INVOKE CloseHandle, filehandle

 0000033B			RETURN:
 0000033B  61				popad
 0000033C  A1 0000009F R		mov eax, err
					ret
 00000343			CountToDos ENDP

				END
Microsoft (R) Macro Assembler Version 14.29.30137.0	    12/20/21 00:16:50
ToDo.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
TODO . . . . . . . . . . . . . .	 00000069
  ID . . . . . . . . . . . . . .	 00000000	 DWord
  description  . . . . . . . . .	 00000004	 Byte
  completed  . . . . . . . . . .	 00000068	 Byte
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000A7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000343 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AddNew . . . . . . . . . . . . .	P Near	 0000014D _TEXT	Length= 0000007C Public STDCALL
  desc . . . . . . . . . . . . .	DWord	 bp + 00000008
  username . . . . . . . . . . .	DWord	 bp - 00000004
  td . . . . . . . . . . . . . .	 00000069    bp - 0000006D
  _IF1 . . . . . . . . . . . . .	L Near	 0000015E _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 00000173 _TEXT	
  _IF2 . . . . . . . . . . . . .	L Near	 000001AE _TEXT	
  _ENDIF2  . . . . . . . . . . .	L Near	 000001BF _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 000001BF _TEXT	
AppendFile . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CountToDos . . . . . . . . . . .	P Near	 000002E5 _TEXT	Length= 0000005E Public STDCALL
  filehandle . . . . . . . . . .	DWord	 bp - 00000004
  username . . . . . . . . . . .	DWord	 bp - 00000008
  td . . . . . . . . . . . . . .	 00000069    bp - 00000071
  _IF1 . . . . . . . . . . . . .	L Near	 0000030C _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 00000313 _TEXT	
  WHILE1 . . . . . . . . . . . .	L Near	 00000316 _TEXT	
  ENDWHILE1  . . . . . . . . . .	L Near	 00000333 _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 0000033B _TEXT	
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisplayCompleted . . . . . . . .	P Near	 000000BC _TEXT	Length= 00000091 Public STDCALL
  filehandle . . . . . . . . . .	DWord	 bp - 00000004
  username . . . . . . . . . . .	DWord	 bp - 00000008
  td . . . . . . . . . . . . . .	 00000069    bp - 00000071
  _IF1 . . . . . . . . . . . . .	L Near	 000000ED _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 000000FE _TEXT	
  WHILE1 . . . . . . . . . . . .	L Near	 00000101 _TEXT	
  _IF2 . . . . . . . . . . . . .	L Near	 00000116 _TEXT	
  _ENDIF2  . . . . . . . . . . .	L Near	 0000013B _TEXT	
  ENDWHILE1  . . . . . . . . . .	L Near	 0000013D _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 00000145 _TEXT	
DisplayUnfinished  . . . . . . .	P Near	 0000002B _TEXT	Length= 00000091 Public STDCALL
  filehandle . . . . . . . . . .	DWord	 bp - 00000004
  username . . . . . . . . . . .	DWord	 bp - 00000008
  td . . . . . . . . . . . . . .	 00000069    bp - 00000071
  _IF1 . . . . . . . . . . . . .	L Near	 0000005C _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 0000006D _TEXT	
  WHILE1 . . . . . . . . . . . .	L Near	 00000070 _TEXT	
  _IF2 . . . . . . . . . . . . .	L Near	 00000085 _TEXT	
  _ENDIF2  . . . . . . . . . . .	L Near	 000000AA _TEXT	
  ENDWHILE1  . . . . . . . . . .	L Near	 000000AC _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 000000B4 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetName  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPassword  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadUser . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000016 Public STDCALL
  userPtr  . . . . . . . . . . .	DWord	 bp + 00000008
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Login  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MarkAsDone . . . . . . . . . . .	P Near	 000001C9 _TEXT	Length= 000000DB Public STDCALL
  ID . . . . . . . . . . . . . .	DWord	 bp + 00000008
  filehandle . . . . . . . . . .	DWord	 bp - 00000004
  filename . . . . . . . . . . .	DWord	 bp - 00000008
  td . . . . . . . . . . . . . .	 00000069    bp - 00000071
  numWritten . . . . . . . . . .	DWord	 bp - 00000078
  found  . . . . . . . . . . . .	Byte	 bp - 00000079
  _IF1 . . . . . . . . . . . . .	L Near	 000001DE _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 000001F6 _TEXT	
  _IF2 . . . . . . . . . . . . .	L Near	 00000225 _TEXT	
  _ENDIF2  . . . . . . . . . . .	L Near	 00000236 _TEXT	
  WHILE1 . . . . . . . . . . . .	L Near	 00000239 _TEXT	
  _IF3 . . . . . . . . . . . . .	L Near	 00000251 _TEXT	
  _ENDIF3  . . . . . . . . . . .	L Near	 00000280 _TEXT	
  ENDWHILE1  . . . . . . . . . .	L Near	 00000282 _TEXT	
  _IF4 . . . . . . . . . . . . .	L Near	 00000282 _TEXT	
  _ENDIF4  . . . . . . . . . . .	L Near	 00000292 _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 0000029A _TEXT	
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SearchFile . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Signup . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ToDo_DisplayErrorMsg . . . . . .	P Near	 000002A4 _TEXT	Length= 00000041 Public STDCALL
  _IF1 . . . . . . . . . . . . .	L Near	 000002AF _TEXT	
  _ENDIF1  . . . . . . . . . . .	L Near	 000002CA _TEXT	
  RETURN . . . . . . . . . . . .	L Near	 000002E3 _TEXT	
UnloadUser . . . . . . . . . . .	P Near	 00000016 _TEXT	Length= 00000015 Public STDCALL
User_DisplayErrorMsg . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
ERROR_MSG_LEN  . . . . . . . . .	Number	 0000001Eh   
ERROR_RANGE  . . . . . . . . . .	Number	 00000004h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_ERROR . . . . . . . . . . .	Number	 00000001h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
INVALID_TODO_ID  . . . . . . . .	Number	 00000003h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAX_DESC_LEN . . . . . . . . . .	Number	 00000064h   
MAX_NAME_LEN . . . . . . . . . .	Number	 0000001Eh   
MAX_PW_LEN . . . . . . . . . . .	Number	 0000001Eh   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NO_ERROR . . . . . . . . . . . .	Number	 00000000h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TODO_SIZE  . . . . . . . . . . .	Number	 00000069h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
USER_NOT_LOADED  . . . . . . . .	Number	 00000002h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count  . . . . . . . . . . . . .	DWord	 000000A3 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
errorTable . . . . . . . . . . .	Byte	 00000000 _DATA	
err  . . . . . . . . . . . . . .	DWord	 0000009F _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
tdlHeading . . . . . . . . . . .	Byte	 0000008E _DATA	
uPtr . . . . . . . . . . . . . .	DWord	 0000009B _DATA	
unknownError . . . . . . . . . .	Byte	 0000007C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
